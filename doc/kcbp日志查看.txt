
**LBM异常查看：
	LBM出了内存操作错误，线程就会崩溃，一般情况下，崩溃后都会写在操作系统下生成core文件，在KCBP日志里也有反映，通过查看
日志记录可以知道错误发生的地方。
	对于LBM出了内存操作错误引起的线程崩溃，没有好的解决办法，可行的办法是在LBM里加入KCBP_PrintStatus()语句，把运行日志记
录在KCBP的日志里，在出错后可以通过查看日志来分析原因。具体用法和printf语句差不多。
	例子：
		KCBP_PrintStatus(hHandle, "Name=%s Count=%d", szName, nCount) ;

*************************************************************************************************************************
KCBP/Unix日志格式
	日志每列含义：
	20090819-205232-101863  7358 1115699520   104 biz LoadLBM L1160103 20090819205232000005000005 start
	    日期-时间-微秒数    进程   线程ID     级别 内容 
	
	**错误日志示例
	20090819-205232-101863  7358 1115699520   104 biz LoadLBM L1160103 20090819205232000005000005 start							;进入LoadLBM()
	20090819-205232-101919  7358 1115699520     9 CRuntimeTable::IncreaseCounter start
	20090819-205232-101930  7358 1115699520     9 CRuntimeTable::Lock start
	20090819-205232-101939  7358 1115699520     9 CRuntimeTable::Lock end
	20090819-205232-101952  7358 1115699520     9 CRuntimeTable::Unlock start
	20090819-205232-101962  7358 1115699520     9 CRuntimeTable::Unlock end
	20090819-205232-101969  7358 1115699520     9 CRuntimeTable::IncreaseCounter end
	20090819-205232-102023  7358 1115699520     5 Biz LoadLBM L1160103 dlopen(/home/kbssuser/kbss_ora/lbm/L1160103.so) start		;加载LBM函数，如果没有加载的话
	20090819-205232-109479  7358 1115699520     5 Biz LoadLBM L1160103 /home/kbssuser/kbss_ora/lbm/L1160103.so LBM_ListCustInfo 0x	;执行LBM前的显示，包括LBM名，库名，函数名，句柄地址，函数地址
	20090819-205232-109479  7358 1115699520     5 c13f1f0 0x2aaac6d4d540 start														;本行后就开始执行LBM
	20090819-205232-116168  7358 1115699520    10 BizWt.cpp 970 Abnormally Terminated												;产生异常，以下记录相关信息，包括LBM名和参数
	20090819-205232-116195  7358 1115699520 10000 LBM Core Dump occured, param:[L1160103 : _CA=2.3&_ENDIAN=0&F_SUBSYS=1&F_FUNCTION
	20090819-205232-116195  7358 1115699520 10000 =200200010&F_OP_USER=l+7km7UYTZo@3D&F_OP_ROLE=2&F_OP_SITE=1:10.17.178.183&F_CHAN
	20090819-205232-116195  7358 1115699520 10000 NEL=0&F_SESSION=0102000000000000271009081909082008493200000002594rD3BXXUAiU@3DBs
	20090819-205232-116195  7358 1115699520 10000 sGE0uW22kfIsYTZaorA8XrTFTL3oivBpUTuIqSNk4@3D&F_OP_ORG=1&F_RUNTIME=a78gK9z+X0xPmm
	20090819-205232-116195  7358 1115699520 10000 S5bxHl6CNs3o7YomaYEHj/F5yj6zQ@3D&CUST_CLS=&CUST_CODE=12231&CUST_STATUS=&INT_ORG=
	20090819-205232-116195  7358 1115699520 10000 ], get signal 11
	
	LBM出错后，日志里的_CA=2.3&_ENDIAN=0&之后，跟的就是LBM的实际参数，可以根据LBM名称和参数去重现错误。
	
	**正常的LBM调用相关日志，多线程执行，日志顺序可能稍有不同。
	20091013-222427-939857  8257 1133869376   104 biz LoadLBM LBMTest 20091013222427000000000001 start								;进入LoadLBM()
	20091013-222427-939997  8257 1133869376     9 CRuntimeTable::IncreaseCounter start
	20091013-222427-940004  8257 1133869376     9 CRuntimeTable::Lock start
	20091013-222427-940010  8257 1133869376     9 CRuntimeTable::Lock end
	20091013-222427-940051  8257 1133869376     9 CRuntimeTable::Unlock start
	20091013-222427-940058  8257 1133869376     9 CRuntimeTable::Unlock end
	20091013-222427-940063  8257 1133869376     9 CRuntimeTable::IncreaseCounter end
	20091013-222427-940265  8257 1133869376     5 Biz LoadLBM LBMTest dlopen(./LBMTest.so) start									;加载LBM函数，如果没有加载的话
	20091013-222427-940491  8257 1133869376     5 Biz LoadLBM LBMTest ./LBMTest.so LBMTest 0x86844c0 0x2b2adb477658 start			;执行LBM前的显示，包括LBM名，库名，函数名，句柄地址，函数地址,;本行后就开始执行LBM
	20091013-222427-941265  8244 1301707072     1 013000000000000000003000100001000000000C2906B84CKCXP00  GV2gODkBbGg=200910132224	;LBM执行后返回的结果
	20091013-222427-941265  8244 1301707072     1 27000000000001LBMTest 00275000000          041_CA=CD2.2&_SYSID=10&_ENDIAN=0&_RS_
	20091013-222427-941265  8244 1301707072     1 1=table1;3;MSG_CODE, MSG_LEVEL, MSG_TEXT;1&_1=0,0,Load Test LBM LBM_DB2 Success!
	20091013-222427-941265  8244 1301707072     1 &_EORS_1=1&_RS_2=table2;2;ID,NAME;2&_C_N=MSG_CODE,MSG_LEVEL,MSG_TEXT;ID,NAME&_2=
	20091013-222427-941265  8244 1301707072     1 0,业务程序运行正常000&_3=1,业务程序运行正常001&_EORS_2=3&_RC=3&_CC=2&_TL=3:1;2:2
	20091013-222427-941265  8244 1301707072     1 ;
	20091013-222427-941282  8244 1301707072    10 Dispatch.cpp 613
	20091013-222427-941324  8244 1301707072     5 000000010000C1E90EAE1D9B answer start												;开始LBM应答
	20091013-222427-941331  8244 1301707072     1 iPacketLen=401																	;应答包全长
	20091013-222427-941336  8244 1301707072   103 Output=013000000000000000003000100001000000000C2906B84CKCXP00  GV2gODkBbGg=20091	;应答包内容，开始写XP队列
	20091013-222427-941336  8244 1301707072   103 013222427000000000001LBMTest 00275000000          041_CA=CD2.2&_SYSID=10&_ENDIAN
	20091013-222427-941336  8244 1301707072   103 =0&_RS_1=table1;3;MSG_CODE, MSG_LEVEL, MSG_TEXT;1&_1=0,0,Load Test LBM LBM_DB2 S
	20091013-222427-941336  8244 1301707072   103 uccess!&_EORS_1=1&_RS_2=table2;2;ID,NAME;2&_C_N=MSG_CODE,MSG_LEVEL,MSG_TEXT;ID,N
	20091013-222427-941336  8244 1301707072   103 AME&_2=0,业务程序运行正常000&_3=1,业务程序运行正常001&_EORS_2=3&_RC=3&_CC=2&_TL=
	20091013-222427-941336  8244 1301707072   103 3:1;2:2;
	20091013-222427-941618  8257 1133869376     5 Biz LoadLBM LBMTest ./LBMTest.so LBMTest end 										;LoadLBM()执行完成
	
*************************************************************************************************************************
KCBP/Win日志格式
	日志每列含义(普通精度)：
	[20130603-154244][    23912390][ 980- 968][  100] QueueId=100 MsgId=000000010000973D1585D8F4 Name=MANAGE
	    [日期-时间]-[机器启动后的毫秒数]    [进程ID- 线程ID]   [级别] 内容 
	
	日志每列含义(高精度，精度可配)：
	[20130725-131234 281536069339][   281533453][ fc0- a24][  100] kcbpas 5 start
	    [日期-时间 高精度微秒数]-[机器启动后的毫秒数]    [进程ID- 线程ID]   [级别] 内容 
	
	**错误日志示例
	[20130628-143724][    71912781][ d14-137c][    5] Call start
	[20130628-143724][    71912781][ d14-137c][   99] Call: Node=async, LBM=LBMTest1, Len=147, Buf=_CA=2.3&_ENDIAN=0&funcid=LBMRCall&z
	[20130628-143724][    71912781][ d14-137c][   99] jzh=000112&jys=0&lbmname=LBMTest1&kcbpnode=async&timeout=2000&delay=2&param=retu
	[20130628-143724][    71912781][ d14-137c][   99] rn&debug=no&exception=no&count=1
	[20130628-143724][    71912781][ d14-137c][    9] Undefined program bpel in local
	[20130628-143724][    71912890][ bdc-11d0][ 2001] KCBP AS 0 abnormally terminated
	[20130628-143724][    71912890][ bdc-11d0][ 2001] LUW: QueueId=101, MsgId=00000001000096D415A6BF24, Serial=51CD2F24001005000000000
	[20130628-143724][    71912890][ bdc-11d0][ 2001] 001, ServiceName=LBMRCall, Process=1404, Thread=6000
	[20130628-143724][    71912890][ bdc-11d0][ 2001] LUW: dump=012000000000000000001000000000000000000C29B9E3E8KCXP00  GV2gODkBbGg=  
	[20130628-143724][    71912890][ bdc-11d0][ 2001]                         LBMRCall00147000000          082_CA=2.3&_ENDIAN=0&funcid
	[20130628-143724][    71912890][ bdc-11d0][ 2001] =LBMRCall&zjzh=000112&jys=0&lbmname=LBMTest1&kcbpnode=async&timeout=2000&delay=2
	[20130628-143724][    71912890][ bdc-11d0][ 2001] &param=return&debug=no&exception=no&count=1
	[20130628-143724][    71912890][ bdc-11d0][  100] dispatch StartWorkerThread 0 1 start
	[20130628-143724][    71912890][ bdc-11d0][    5] KCBPAS 0 start
	[20130628-143724][    71913031][ 2cc-1200][  102] Undefined system parameter maxpublishlifetime, use default 90
	[20130628-143724][    71913031][ 2cc-1200][    9] CRuntimeTableShm<T>::Init shared memory nLen=3184016
	
	LBM出错后，日志里的_CA=2.3&_ENDIAN=0&之后，跟的就是LBM的实际参数，可以根据LBM名称和参数去重现错误。
	
	**正常的LBM调用相关日志，多线程执行，日志顺序可能稍有不同。
	[20130701-132017][   112405750][ f68- ebc][  100] dispatch receive a request 000000010000987015AAA191
	[20130701-132017][   112405750][ f68- ebc][   99] Req: NodeId=1005, QueueId=101, MsgId=000000010000987015AAA191, Len=280, Buf=0120
	[20130701-132017][   112405750][ f68- ebc][   99] 00000000000000001000000000000000000C29B9E3E8KCXP00  GV2gODkBbGg=                
	[20130701-132017][   112405750][ f68- ebc][   99]           LBMRCall00154000000          150_CA=2.3&_ENDIAN=0&funcid=LBMRCall&zjzh
	[20130701-132017][   112405750][ f68- ebc][   99] =000112&jys=0&lbmname=LBMTest1&kcbpnode=async&timeout=2000&delay=2&param=return&
	[20130701-132017][   112405750][ f68- ebc][   99] debug=no&exception=no&count=1&disp=1
	[20130701-132017][   112405750][ f68- ebc][    5] QueryExternalQueue 3 6 begin 
	[20130701-132017][   112405750][ 514- af0][  100] as 0 receive a request msgid=000000010000987015AAA191 mtype=0
	[20130701-132017][   112405750][ 514- af0][    5] ReceiveRequest 000000010000987015AAA191 end
	[20130701-132017][   112405750][ 514- af0][    9] CRuntimeTable::IncreaseCounter start
	[20130701-132017][   112405750][ 514- af0][    9] CRuntimeTable::Lock start
	[20130701-132017][   112405750][ 514- af0][    9] CRuntimeTable::Lock end
	[20130701-132017][   112405750][ 514- af0][    9] CRuntimeTable::Unlock start
	[20130701-132017][   112405750][ 514- af0][    9] CRuntimeTable::Unlock end
	[20130701-132017][   112405750][ 514- af0][    9] CRuntimeTable::IncreaseCounter end
	[20130701-132017][   112405750][ 514- af0][  100] QueueId=101 MsgId=000000010000987015AAA191 Name=LBMRCall
	[20130701-132017][   112405750][ 514- af0][    5] worker 000000010000987015AAA191, LBMRCall, 51D11191001005000000000001
	[20130701-132017][   112405750][ 514- af0][    5] loadlbm start
	[20130701-132017][   112405750][ 514- af0][    9] LoadLBM LBMRCall 51D11191001005000000000001 start
*************************************************************************************************************************
KCBP/Win日志时间精度设置
	设置格式说明
		<log type="run" precision="1"/>		设置微秒格式
		<log type="run" precision="1000"/>	设置豪秒格式，缺省

*************************************************************************************************************************
